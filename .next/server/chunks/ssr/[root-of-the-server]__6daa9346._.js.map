{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/generate-care-tips.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview Generates personalized tips on pond maintenance and disease prevention for catfish farming.\n *\n * - generateCareTips - A function that generates care tips based on the provided data.\n * - GenerateCareTipsInput - The input type for the generateCareTips function.\n * - GenerateCareTipsOutput - The return type for the generateCareTips function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst GenerateCareTipsInputSchema = z.object({\n  pondCount: z.number().describe('The number of ponds in the catfish farm.'),\n  pondArea: z.number().describe('The total area of the ponds in square meters.'),\n  catfishType: z.string().describe('The type of catfish being farmed.'),\n  stockingDensity: z\n    .number()\n    .describe('The stocking density of catfish per square meter.'),\n  feedType: z.string().describe('The type of feed used for the catfish.'),\n  waterSource: z.string().describe('The source of water for the ponds.'),\n  diseaseHistory: z\n    .string()\n    .describe('A summary of the disease history in the catfish farm.'),\n  currentHealthStatus: z\n    .string()\n    .describe('The current health status of the catfish.'),\n});\nexport type GenerateCareTipsInput = z.infer<typeof GenerateCareTipsInputSchema>;\n\nconst GenerateCareTipsOutputSchema = z.object({\n  careTips: z\n    .string()\n    .describe(\n      'Personalized tips on pond maintenance and disease prevention for catfish farming.'\n    ),\n});\nexport type GenerateCareTipsOutput = z.infer<typeof GenerateCareTipsOutputSchema>;\n\nexport async function generateCareTips(\n  input: GenerateCareTipsInput\n): Promise<GenerateCareTipsOutput> {\n  return generateCareTipsFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'generateCareTipsPrompt',\n  input: {schema: GenerateCareTipsInputSchema},\n  output: {schema: GenerateCareTipsOutputSchema},\n  prompt: `You are an expert in catfish farming, providing advice to farmers.\n\n  Based on the following data about the catfish farm, generate personalized tips on pond maintenance and disease prevention.\n\n  Pond Count: {{{pondCount}}}\n  Pond Area: {{{pondArea}}} square meters\n  Catfish Type: {{{catfishType}}}\n  Stocking Density: {{{stockingDensity}}} per square meter\n  Feed Type: {{{feedType}}}\n  Water Source: {{{waterSource}}}\n  Disease History: {{{diseaseHistory}}}\n  Current Health Status: {{{currentHealthStatus}}}\n\n  Care Tips:`,\n});\n\nconst generateCareTipsFlow = ai.defineFlow(\n  {\n    name: 'generateCareTipsFlow',\n    inputSchema: GenerateCareTipsInputSchema,\n    outputSchema: GenerateCareTipsOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,8BAA8B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC3C,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC/B,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC9B,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACjC,iBAAiB,uIAAA,CAAA,IAAC,CACf,MAAM,GACN,QAAQ,CAAC;IACZ,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC9B,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACjC,gBAAgB,uIAAA,CAAA,IAAC,CACd,MAAM,GACN,QAAQ,CAAC;IACZ,qBAAqB,uIAAA,CAAA,IAAC,CACnB,MAAM,GACN,QAAQ,CAAC;AACd;AAGA,MAAM,+BAA+B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC5C,UAAU,uIAAA,CAAA,IAAC,CACR,MAAM,GACN,QAAQ,CACP;AAEN;AAGO,eAAe,iBACpB,KAA4B;IAE5B,OAAO,qBAAqB;AAC9B;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAA2B;IAC3C,QAAQ;QAAC,QAAQ;IAA4B;IAC7C,QAAQ,CAAC;;;;;;;;;;;;;YAaC,CAAC;AACb;AAEA,MAAM,uBAAuB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACxC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IAnCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 305, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/diagnose-catfish-flow.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview An AI agent for diagnosing catfish health from photos.\n *\n * - diagnoseCatfish - A function that handles the catfish diagnosis process.\n * - DiagnoseCatfishInput - The input type for the diagnoseCatfish function.\n * - DiagnoseCatfishOutput - The return type for the diagnoseCatfish function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst DiagnoseCatfishInputSchema = z.object({\n  photoDataUri: z\n    .string()\n    .describe(\n      \"A photo of a catfish, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'.\"\n    ),\n});\nexport type DiagnoseCatfishInput = z.infer<typeof DiagnoseCatfishInputSchema>;\n\nconst DiagnoseCatfishOutputSchema = z.object({\n  isCatfish: z\n    .boolean()\n    .describe('Whether or not the image appears to contain a catfish.'),\n  disease: z\n    .string()\n    .describe(\n      'The name of the identified disease or \"Sehat\" if the fish appears healthy. If not a catfish, this should be \"Tidak teridentifikasi\".'\n    ),\n  diagnosis: z\n    .string()\n    .describe(\n      'A brief visual diagnosis based on the photo, explaining the signs observed.'\n    ),\n  recommendation: z\n    .string()\n    .describe(\n      'A short, actionable recommendation for the farmer based on the diagnosis.'\n    ),\n});\nexport type DiagnoseCatfishOutput = z.infer<typeof DiagnoseCatfishOutputSchema>;\n\nexport async function diagnoseCatfish(\n  input: DiagnoseCatfishInput\n): Promise<DiagnoseCatfishOutput> {\n  return diagnoseCatfishFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'diagnoseCatfishPrompt',\n  input: {schema: DiagnoseCatfishInputSchema},\n  output: {schema: DiagnoseCatfishOutputSchema},\n  prompt: `You are an expert veterinarian specializing in aquaculture and fish diseases, particularly for catfish (lele). Your task is to analyze an image provided by a farmer and offer a preliminary diagnosis.\n\nAnalyze the image provided below.\n\nPhoto: {{media url=photoDataUri}}\n\nBased on your visual analysis, complete the following tasks:\n1.  Determine if the creature in the image is a catfish. Set the 'isCatfish' field accordingly.\n2.  If it is a catfish, carefully examine it for any signs of common diseases (e.g., white spots, fin rot, lesions, bloating, unusual coloration, parasites).\n3.  Provide a concise 'diagnosis' summarizing what you see. For example, \"Terdapat bintik-bintik putih di sekujur tubuh dan sirip.\" If the fish looks healthy, state \"Ikan tampak sehat, aktif, dan tidak ada tanda-tanda penyakit.\"\n4.  Identify the potential 'disease'. Use the common Indonesian name for the disease if possible. If the fish is healthy, set this to \"Sehat\". If it is not a catfish, set it to \"Tidak teridentifikasi\".\n5.  Provide a short, practical 'recommendation' for the farmer. This could involve water quality checks, quarantine procedures, or suggesting a specific treatment type. For healthy fish, provide a simple preventive tip.\n\nReturn your response in the specified JSON format. Be concise and use clear, easy-to-understand language for a farmer.`,\n});\n\nconst diagnoseCatfishFlow = ai.defineFlow(\n  {\n    name: 'diagnoseCatfishFlow',\n    inputSchema: DiagnoseCatfishInputSchema,\n    outputSchema: DiagnoseCatfishOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AACA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,6BAA6B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC1C,cAAc,uIAAA,CAAA,IAAC,CACZ,MAAM,GACN,QAAQ,CACP;AAEN;AAGA,MAAM,8BAA8B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC3C,WAAW,uIAAA,CAAA,IAAC,CACT,OAAO,GACP,QAAQ,CAAC;IACZ,SAAS,uIAAA,CAAA,IAAC,CACP,MAAM,GACN,QAAQ,CACP;IAEJ,WAAW,uIAAA,CAAA,IAAC,CACT,MAAM,GACN,QAAQ,CACP;IAEJ,gBAAgB,uIAAA,CAAA,IAAC,CACd,MAAM,GACN,QAAQ,CACP;AAEN;AAGO,eAAe,gBACpB,KAA2B;IAE3B,OAAO,oBAAoB;AAC7B;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAA0B;IAC1C,QAAQ;QAAC,QAAQ;IAA2B;IAC5C,QAAQ,CAAC;;;;;;;;;;;;;sHAa2G,CAAC;AACvH;AAEA,MAAM,sBAAsB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACvC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IAnCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 378, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["\"use server\";\n\nimport { generateCareTips, type GenerateCareTipsInput, type GenerateCareTipsOutput } from \"@/ai/flows/generate-care-tips\";\nimport { diagnoseCatfish, type DiagnoseCatfishInput, type DiagnoseCatfishOutput } from \"@/ai/flows/diagnose-catfish-flow\";\n\nexport async function getCareTipsAction(input: GenerateCareTipsInput): Promise<GenerateCareTipsOutput | null> {\n    try {\n        const result = await generateCareTips(input);\n        return result;\n    } catch (error) {\n        console.error(\"Error generating care tips:\", error);\n        return null;\n    }\n}\n\nexport async function diagnoseCatfishAction(input: DiagnoseCatfishInput): Promise<DiagnoseCatfishOutput | null> {\n    try {\n        const result = await diagnoseCatfish(input);\n        return result;\n    } catch (error) {\n        console.error(\"Error diagnosing catfish:\", error);\n        return null;\n    }\n}\n"],"names":[],"mappings":";;;;;;AAEA;AACA;;;;;;AAEO,eAAe,kBAAkB,KAA4B;IAChE,IAAI;QACA,MAAM,SAAS,MAAM,CAAA,GAAA,8IAAA,CAAA,mBAAgB,AAAD,EAAE;QACtC,OAAO;IACX,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,OAAO;IACX;AACJ;AAEO,eAAe,sBAAsB,KAA2B;IACnE,IAAI;QACA,MAAM,SAAS,MAAM,CAAA,GAAA,iJAAA,CAAA,kBAAe,AAAD,EAAE;QACrC,OAAO;IACX,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,OAAO;IACX;AACJ;;;IAlBsB;IAUA;;AAVA,+OAAA;AAUA,+OAAA","debugId":null}},
    {"offset": {"line": 422, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getCareTipsAction as '4051ec3f1fd6e4d32a9b2b3ef0028114416a27506c'} from 'ACTIONS_MODULE0'\nexport {diagnoseCatfishAction as '409f2e84de24544b708f945c0af766bf57b8462a57'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 477, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/app-shell.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AppShell = registerClientReference(\n    function() { throw new Error(\"Attempted to call AppShell() from the server but AppShell is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/app-shell.tsx <module evaluation>\",\n    \"AppShell\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,8DACA","debugId":null}},
    {"offset": {"line": 491, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/app-shell.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AppShell = registerClientReference(\n    function() { throw new Error(\"Attempted to call AppShell() from the server but AppShell is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/app-shell.tsx\",\n    \"AppShell\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,0CACA","debugId":null}},
    {"offset": {"line": 505, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 515, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/care-tips-generator.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const CareTipsGenerator = registerClientReference(\n    function() { throw new Error(\"Attempted to call CareTipsGenerator() from the server but CareTipsGenerator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/care-tips-generator.tsx <module evaluation>\",\n    \"CareTipsGenerator\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,kFACA","debugId":null}},
    {"offset": {"line": 529, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/care-tips-generator.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const CareTipsGenerator = registerClientReference(\n    function() { throw new Error(\"Attempted to call CareTipsGenerator() from the server but CareTipsGenerator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/care-tips-generator.tsx\",\n    \"CareTipsGenerator\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,8DACA","debugId":null}},
    {"offset": {"line": 543, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 553, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/cultivation-calendar-card.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const CultivationCalendarCard = registerClientReference(\n    function() { throw new Error(\"Attempted to call CultivationCalendarCard() from the server but CultivationCalendarCard is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/cultivation-calendar-card.tsx <module evaluation>\",\n    \"CultivationCalendarCard\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,0BAA0B,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzD;IAAa,MAAM,IAAI,MAAM;AAA8P,GAC3R,wFACA","debugId":null}},
    {"offset": {"line": 567, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/cultivation-calendar-card.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const CultivationCalendarCard = registerClientReference(\n    function() { throw new Error(\"Attempted to call CultivationCalendarCard() from the server but CultivationCalendarCard is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/cultivation-calendar-card.tsx\",\n    \"CultivationCalendarCard\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,0BAA0B,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzD;IAAa,MAAM,IAAI,MAAM;AAA8P,GAC3R,oEACA","debugId":null}},
    {"offset": {"line": 581, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 591, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/growth-chart-card.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const GrowthChartCard = registerClientReference(\n    function() { throw new Error(\"Attempted to call GrowthChartCard() from the server but GrowthChartCard is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/growth-chart-card.tsx <module evaluation>\",\n    \"GrowthChartCard\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,gFACA","debugId":null}},
    {"offset": {"line": 605, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/growth-chart-card.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const GrowthChartCard = registerClientReference(\n    function() { throw new Error(\"Attempted to call GrowthChartCard() from the server but GrowthChartCard is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/growth-chart-card.tsx\",\n    \"GrowthChartCard\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,4DACA","debugId":null}},
    {"offset": {"line": 619, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 629, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/summary-cards.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const FeedSummaryCard = registerClientReference(\n    function() { throw new Error(\"Attempted to call FeedSummaryCard() from the server but FeedSummaryCard is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/summary-cards.tsx <module evaluation>\",\n    \"FeedSummaryCard\",\n);\nexport const FinanceSummaryCard = registerClientReference(\n    function() { throw new Error(\"Attempted to call FinanceSummaryCard() from the server but FinanceSummaryCard is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/summary-cards.tsx <module evaluation>\",\n    \"FinanceSummaryCard\",\n);\nexport const PondSummaryCard = registerClientReference(\n    function() { throw new Error(\"Attempted to call PondSummaryCard() from the server but PondSummaryCard is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/summary-cards.tsx <module evaluation>\",\n    \"PondSummaryCard\",\n);\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,4EACA;AAEG,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,4EACA;AAEG,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,4EACA","debugId":null}},
    {"offset": {"line": 651, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/summary-cards.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const FeedSummaryCard = registerClientReference(\n    function() { throw new Error(\"Attempted to call FeedSummaryCard() from the server but FeedSummaryCard is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/summary-cards.tsx\",\n    \"FeedSummaryCard\",\n);\nexport const FinanceSummaryCard = registerClientReference(\n    function() { throw new Error(\"Attempted to call FinanceSummaryCard() from the server but FinanceSummaryCard is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/summary-cards.tsx\",\n    \"FinanceSummaryCard\",\n);\nexport const PondSummaryCard = registerClientReference(\n    function() { throw new Error(\"Attempted to call PondSummaryCard() from the server but PondSummaryCard is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/summary-cards.tsx\",\n    \"PondSummaryCard\",\n);\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,wDACA;AAEG,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,wDACA;AAEG,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,wDACA","debugId":null}},
    {"offset": {"line": 673, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 683, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/contexts/FarmDataContext.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const FarmDataProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call FarmDataProvider() from the server but FarmDataProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/contexts/FarmDataContext.tsx <module evaluation>\",\n    \"FarmDataProvider\",\n);\nexport const useFarmData = registerClientReference(\n    function() { throw new Error(\"Attempted to call useFarmData() from the server but useFarmData is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/contexts/FarmDataContext.tsx <module evaluation>\",\n    \"useFarmData\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,kEACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,kEACA","debugId":null}},
    {"offset": {"line": 701, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/contexts/FarmDataContext.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const FarmDataProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call FarmDataProvider() from the server but FarmDataProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/contexts/FarmDataContext.tsx\",\n    \"FarmDataProvider\",\n);\nexport const useFarmData = registerClientReference(\n    function() { throw new Error(\"Attempted to call useFarmData() from the server but useFarmData is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/contexts/FarmDataContext.tsx\",\n    \"useFarmData\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,8CACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,8CACA","debugId":null}},
    {"offset": {"line": 719, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 729, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/catfish-diagnosis-card.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const CatfishDiagnosisCard = registerClientReference(\n    function() { throw new Error(\"Attempted to call CatfishDiagnosisCard() from the server but CatfishDiagnosisCard is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/catfish-diagnosis-card.tsx <module evaluation>\",\n    \"CatfishDiagnosisCard\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,uBAAuB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,qFACA","debugId":null}},
    {"offset": {"line": 743, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/catfish-diagnosis-card.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const CatfishDiagnosisCard = registerClientReference(\n    function() { throw new Error(\"Attempted to call CatfishDiagnosisCard() from the server but CatfishDiagnosisCard is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/catfish-diagnosis-card.tsx\",\n    \"CatfishDiagnosisCard\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,uBAAuB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,iEACA","debugId":null}},
    {"offset": {"line": 757, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 767, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["import { AppShell } from \"@/components/app-shell\";\nimport { CareTipsGenerator } from \"@/components/dashboard/care-tips-generator\";\nimport { CultivationCalendarCard } from \"@/components/dashboard/cultivation-calendar-card\";\nimport { GrowthChartCard } from \"@/components/dashboard/growth-chart-card\";\nimport { FinanceSummaryCard, FeedSummaryCard, PondSummaryCard } from \"@/components/dashboard/summary-cards\";\nimport { FarmDataProvider } from \"@/contexts/FarmDataContext\";\nimport { CatfishDiagnosisCard } from \"@/components/dashboard/catfish-diagnosis-card\";\n\nexport default function Home() {\n  return (\n    <AppShell>\n      <FarmDataProvider>\n        <main className=\"flex-1 p-4 sm:p-6 lg:p-8 bg-background\">\n          <h1 className=\"text-2xl md:text-3xl font-bold tracking-tight text-foreground\">\n            Dashboard\n          </h1>\n          <p className=\"text-muted-foreground mt-1\">\n            Selamat datang kembali! Berikut ringkasan peternakan lele Anda.\n          </p>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mt-6\">\n            <PondSummaryCard />\n            <FeedSummaryCard />\n            <FinanceSummaryCard />\n          </div>\n\n          <div className=\"grid grid-cols-1 xl:grid-cols-3 gap-6 mt-6\">\n            <GrowthChartCard className=\"xl:col-span-2\" />\n            <CultivationCalendarCard />\n          </div>\n          \n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mt-6\">\n            <CareTipsGenerator />\n            <CatfishDiagnosisCard />\n          </div>\n        </main>\n      </FarmDataProvider>\n    </AppShell>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAEe,SAAS;IACtB,qBACE,8OAAC,kIAAA,CAAA,WAAQ;kBACP,cAAA,8OAAC,mIAAA,CAAA,mBAAgB;sBACf,cAAA,8OAAC;gBAAK,WAAU;;kCACd,8OAAC;wBAAG,WAAU;kCAAgE;;;;;;kCAG9E,8OAAC;wBAAE,WAAU;kCAA6B;;;;;;kCAI1C,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,mJAAA,CAAA,kBAAe;;;;;0CAChB,8OAAC,mJAAA,CAAA,kBAAe;;;;;0CAChB,8OAAC,mJAAA,CAAA,qBAAkB;;;;;;;;;;;kCAGrB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,0JAAA,CAAA,kBAAe;gCAAC,WAAU;;;;;;0CAC3B,8OAAC,kKAAA,CAAA,0BAAuB;;;;;;;;;;;kCAG1B,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,4JAAA,CAAA,oBAAiB;;;;;0CAClB,8OAAC,+JAAA,CAAA,uBAAoB;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMjC","debugId":null}}]
}