{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/generate-care-tips.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview Generates personalized tips on pond maintenance and disease prevention for catfish farming.\n *\n * - generateCareTips - A function that generates care tips based on the provided data.\n * - GenerateCareTipsInput - The input type for the generateCareTips function.\n * - GenerateCareTipsOutput - The return type for the generateCareTips function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst GenerateCareTipsInputSchema = z.object({\n  pondCount: z.number().describe('The number of ponds in the catfish farm.'),\n  pondArea: z.number().describe('The total area of the ponds in square meters.'),\n  catfishType: z.string().describe('The type of catfish being farmed.'),\n  stockingDensity: z\n    .number()\n    .describe('The stocking density of catfish per square meter.'),\n  feedType: z.string().describe('The type of feed used for the catfish.'),\n  waterSource: z.string().describe('The source of water for the ponds.'),\n  diseaseHistory: z\n    .string()\n    .describe('A summary of the disease history in the catfish farm.'),\n  currentHealthStatus: z\n    .string()\n    .describe('The current health status of the catfish.'),\n});\nexport type GenerateCareTipsInput = z.infer<typeof GenerateCareTipsInputSchema>;\n\nconst GenerateCareTipsOutputSchema = z.object({\n  careTips: z\n    .string()\n    .describe(\n      'Personalized tips on pond maintenance and disease prevention for catfish farming.'\n    ),\n});\nexport type GenerateCareTipsOutput = z.infer<typeof GenerateCareTipsOutputSchema>;\n\nexport async function generateCareTips(\n  input: GenerateCareTipsInput\n): Promise<GenerateCareTipsOutput> {\n  return generateCareTipsFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'generateCareTipsPrompt',\n  input: {schema: GenerateCareTipsInputSchema},\n  output: {schema: GenerateCareTipsOutputSchema},\n  prompt: `You are an expert in catfish farming, providing advice to farmers.\n\n  Based on the following data about the catfish farm, generate personalized tips on pond maintenance and disease prevention.\n\n  Pond Count: {{{pondCount}}}\n  Pond Area: {{{pondArea}}} square meters\n  Catfish Type: {{{catfishType}}}\n  Stocking Density: {{{stockingDensity}}} per square meter\n  Feed Type: {{{feedType}}}\n  Water Source: {{{waterSource}}}\n  Disease History: {{{diseaseHistory}}}\n  Current Health Status: {{{currentHealthStatus}}}\n\n  Care Tips:`,\n});\n\nconst generateCareTipsFlow = ai.defineFlow(\n  {\n    name: 'generateCareTipsFlow',\n    inputSchema: GenerateCareTipsInputSchema,\n    outputSchema: GenerateCareTipsOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,8BAA8B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC3C,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC/B,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC9B,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACjC,iBAAiB,uIAAA,CAAA,IAAC,CACf,MAAM,GACN,QAAQ,CAAC;IACZ,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC9B,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACjC,gBAAgB,uIAAA,CAAA,IAAC,CACd,MAAM,GACN,QAAQ,CAAC;IACZ,qBAAqB,uIAAA,CAAA,IAAC,CACnB,MAAM,GACN,QAAQ,CAAC;AACd;AAGA,MAAM,+BAA+B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC5C,UAAU,uIAAA,CAAA,IAAC,CACR,MAAM,GACN,QAAQ,CACP;AAEN;AAGO,eAAe,iBACpB,KAA4B;IAE5B,OAAO,qBAAqB;AAC9B;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAA2B;IAC3C,QAAQ;QAAC,QAAQ;IAA4B;IAC7C,QAAQ,CAAC;;;;;;;;;;;;;YAaC,CAAC;AACb;AAEA,MAAM,uBAAuB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACxC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IAnCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 305, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["\"use server\";\n\nimport { generateCareTips, type GenerateCareTipsInput, type GenerateCareTipsOutput } from \"@/ai/flows/generate-care-tips\";\n\nexport async function getCareTipsAction(input: GenerateCareTipsInput): Promise<GenerateCareTipsOutput | null> {\n    try {\n        const result = await generateCareTips(input);\n        return result;\n    } catch (error) {\n        console.error(\"Error generating care tips:\", error);\n        return null;\n    }\n}\n"],"names":[],"mappings":";;;;;AAEA;;;;;AAEO,eAAe,kBAAkB,KAA4B;IAChE,IAAI;QACA,MAAM,SAAS,MAAM,CAAA,GAAA,8IAAA,CAAA,mBAAgB,AAAD,EAAE;QACtC,OAAO;IACX,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,OAAO;IACX;AACJ;;;IARsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 335, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getCareTipsAction as '4051ec3f1fd6e4d32a9b2b3ef0028114416a27506c'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 387, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/app-shell.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AppShell = registerClientReference(\n    function() { throw new Error(\"Attempted to call AppShell() from the server but AppShell is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/app-shell.tsx <module evaluation>\",\n    \"AppShell\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,8DACA","debugId":null}},
    {"offset": {"line": 401, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/app-shell.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AppShell = registerClientReference(\n    function() { throw new Error(\"Attempted to call AppShell() from the server but AppShell is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/app-shell.tsx\",\n    \"AppShell\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,0CACA","debugId":null}},
    {"offset": {"line": 415, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 425, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/care-tips-generator.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const CareTipsGenerator = registerClientReference(\n    function() { throw new Error(\"Attempted to call CareTipsGenerator() from the server but CareTipsGenerator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/care-tips-generator.tsx <module evaluation>\",\n    \"CareTipsGenerator\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,kFACA","debugId":null}},
    {"offset": {"line": 439, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/care-tips-generator.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const CareTipsGenerator = registerClientReference(\n    function() { throw new Error(\"Attempted to call CareTipsGenerator() from the server but CareTipsGenerator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/care-tips-generator.tsx\",\n    \"CareTipsGenerator\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,8DACA","debugId":null}},
    {"offset": {"line": 453, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 463, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/cultivation-calendar-card.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const CultivationCalendarCard = registerClientReference(\n    function() { throw new Error(\"Attempted to call CultivationCalendarCard() from the server but CultivationCalendarCard is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/cultivation-calendar-card.tsx <module evaluation>\",\n    \"CultivationCalendarCard\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,0BAA0B,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzD;IAAa,MAAM,IAAI,MAAM;AAA8P,GAC3R,wFACA","debugId":null}},
    {"offset": {"line": 477, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/cultivation-calendar-card.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const CultivationCalendarCard = registerClientReference(\n    function() { throw new Error(\"Attempted to call CultivationCalendarCard() from the server but CultivationCalendarCard is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/cultivation-calendar-card.tsx\",\n    \"CultivationCalendarCard\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,0BAA0B,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzD;IAAa,MAAM,IAAI,MAAM;AAA8P,GAC3R,oEACA","debugId":null}},
    {"offset": {"line": 491, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 501, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/growth-chart-card.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const GrowthChartCard = registerClientReference(\n    function() { throw new Error(\"Attempted to call GrowthChartCard() from the server but GrowthChartCard is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/growth-chart-card.tsx <module evaluation>\",\n    \"GrowthChartCard\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,gFACA","debugId":null}},
    {"offset": {"line": 515, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/growth-chart-card.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const GrowthChartCard = registerClientReference(\n    function() { throw new Error(\"Attempted to call GrowthChartCard() from the server but GrowthChartCard is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/growth-chart-card.tsx\",\n    \"GrowthChartCard\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,4DACA","debugId":null}},
    {"offset": {"line": 529, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 539, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 555, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 636, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/summary-cards.tsx"],"sourcesContent":["import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Droplets, ListTodo, Wallet } from \"lucide-react\";\n\nexport function PondSummaryCard() {\n  return (\n    <Card>\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <CardTitle className=\"text-sm font-medium\">Total Kolam Aktif</CardTitle>\n        <Droplets className=\"h-4 w-4 text-muted-foreground\" />\n      </CardHeader>\n      <CardContent>\n        <div className=\"text-2xl font-bold\">12</div>\n        <p className=\"text-xs text-muted-foreground\">Total luas 1,200 m²</p>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport function FeedSummaryCard() {\n  return (\n    <Card>\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <CardTitle className=\"text-sm font-medium\">Jadwal Pakan</CardTitle>\n        <ListTodo className=\"h-4 w-4 text-muted-foreground\" />\n      </CardHeader>\n      <CardContent>\n        <div className=\"text-2xl font-bold\">08:00 & 17:00</div>\n        <p className=\"text-xs text-muted-foreground\">Jadwal harian</p>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport function FinanceSummaryCard() {\n  return (\n    <Card>\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <CardTitle className=\"text-sm font-medium\">Keuangan Bulan Ini</CardTitle>\n        <Wallet className=\"h-4 w-4 text-muted-foreground\" />\n      </CardHeader>\n      <CardContent>\n        <div className=\"text-2xl font-bold text-green-600\">+Rp 5.250.000</div>\n        <p className=\"text-xs text-muted-foreground\">Estimasi keuntungan bersih</p>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAAA;AAAA;;;;AAEO,SAAS;IACd,qBACE,8OAAC,gIAAA,CAAA,OAAI;;0BACH,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;;kCACpB,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAsB;;;;;;kCAC3C,8OAAC,0MAAA,CAAA,WAAQ;wBAAC,WAAU;;;;;;;;;;;;0BAEtB,8OAAC,gIAAA,CAAA,cAAW;;kCACV,8OAAC;wBAAI,WAAU;kCAAqB;;;;;;kCACpC,8OAAC;wBAAE,WAAU;kCAAgC;;;;;;;;;;;;;;;;;;AAIrD;AAEO,SAAS;IACd,qBACE,8OAAC,gIAAA,CAAA,OAAI;;0BACH,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;;kCACpB,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAsB;;;;;;kCAC3C,8OAAC,8MAAA,CAAA,WAAQ;wBAAC,WAAU;;;;;;;;;;;;0BAEtB,8OAAC,gIAAA,CAAA,cAAW;;kCACV,8OAAC;wBAAI,WAAU;kCAAqB;;;;;;kCACpC,8OAAC;wBAAE,WAAU;kCAAgC;;;;;;;;;;;;;;;;;;AAIrD;AAEO,SAAS;IACd,qBACE,8OAAC,gIAAA,CAAA,OAAI;;0BACH,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;;kCACpB,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAsB;;;;;;kCAC3C,8OAAC,sMAAA,CAAA,SAAM;wBAAC,WAAU;;;;;;;;;;;;0BAEpB,8OAAC,gIAAA,CAAA,cAAW;;kCACV,8OAAC;wBAAI,WAAU;kCAAoC;;;;;;kCACnD,8OAAC;wBAAE,WAAU;kCAAgC;;;;;;;;;;;;;;;;;;AAIrD","debugId":null}},
    {"offset": {"line": 829, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["import { AppShell } from \"@/components/app-shell\";\nimport { CareTipsGenerator } from \"@/components/dashboard/care-tips-generator\";\nimport { CultivationCalendarCard } from \"@/components/dashboard/cultivation-calendar-card\";\nimport { GrowthChartCard } from \"@/components/dashboard/growth-chart-card\";\nimport { FinanceSummaryCard, FeedSummaryCard, PondSummaryCard } from \"@/components/dashboard/summary-cards\";\n\nexport default function Home() {\n  return (\n    <AppShell>\n      <main className=\"flex-1 p-4 sm:p-6 lg:p-8 bg-background\">\n        <h1 className=\"text-2xl md:text-3xl font-bold tracking-tight text-foreground\">\n          Dashboard\n        </h1>\n        <p className=\"text-muted-foreground mt-1\">\n          Selamat datang kembali! Berikut ringkasan peternakan lele Anda.\n        </p>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mt-6\">\n          <PondSummaryCard />\n          <FeedSummaryCard />\n          <FinanceSummaryCard />\n        </div>\n\n        <div className=\"grid grid-cols-1 xl:grid-cols-3 gap-6 mt-6\">\n          <GrowthChartCard className=\"xl:col-span-2\" />\n          <CultivationCalendarCard />\n        </div>\n        \n        <div className=\"mt-6\">\n          <CareTipsGenerator />\n        </div>\n      </main>\n    </AppShell>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;AAEe,SAAS;IACtB,qBACE,8OAAC,kIAAA,CAAA,WAAQ;kBACP,cAAA,8OAAC;YAAK,WAAU;;8BACd,8OAAC;oBAAG,WAAU;8BAAgE;;;;;;8BAG9E,8OAAC;oBAAE,WAAU;8BAA6B;;;;;;8BAI1C,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,mJAAA,CAAA,kBAAe;;;;;sCAChB,8OAAC,mJAAA,CAAA,kBAAe;;;;;sCAChB,8OAAC,mJAAA,CAAA,qBAAkB;;;;;;;;;;;8BAGrB,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,0JAAA,CAAA,kBAAe;4BAAC,WAAU;;;;;;sCAC3B,8OAAC,kKAAA,CAAA,0BAAuB;;;;;;;;;;;8BAG1B,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC,4JAAA,CAAA,oBAAiB;;;;;;;;;;;;;;;;;;;;;AAK5B","debugId":null}}]
}